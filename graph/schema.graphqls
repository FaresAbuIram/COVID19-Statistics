
type User {
  id: ID!
  email: String!
  password: String!
}

type Country {
  name: String!
}


type Query {
  list(userId: Int!): [Country!]!
  percentageeOfDeathToConfirmed(input: PercentageInput!): Float!
  getTopThreeCountries(input: TopThreeCountriesInput!): [Country!]!
}

input PercentageInput {
  userId: Int!
  name: String!
}

input TopThreeCountriesInput {
  userId: Int!
  type: String!
}

input CountryInput {
  userId: Int!
  name: String!
}

input RegisterInput {
  email: String!
  password: String!
}
input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  register(input: RegisterInput!): Boolean!
  login(input: LoginInput!): String!
  addCountry(input: CountryInput): Boolean!
}

