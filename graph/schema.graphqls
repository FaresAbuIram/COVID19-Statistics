
type User {
  id: ID!
  email: String!
  password: String!
}

type Country {
  id: ID!
  userId: ID!
  name: String!
}

type CountryResponse {
   name: String!
}

type Query {
  list: [Country!]!
  dailyPercentageeOfDeathToConfirmed(name: String!): Float!
  getTopThreeCountries(type: String!): [CountryResponse!]!
}

input CountryInput {
  userId: Int!
  name: String!
}

input RegisterInput {
  email: String!
  password: String!
}
input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  register(input: RegisterInput!): Boolean!
  login(input: LoginInput!): String!
  addCountry(input: CountryInput): Boolean!
}

